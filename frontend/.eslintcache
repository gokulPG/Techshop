[{"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\index.js":"1","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\App.js":"3","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Header.js":"4","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\common\\Search.js":"6","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\HomeScreen.js":"7","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\products.js":"8","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Product.js":"9","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Rating.js":"10","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\ProductScreen.js":"11","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\common\\LazyImage.js":"12","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\AuthScreen.js":"13","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\store.js":"14","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\reducers\\productReducers.js":"15","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\constants\\productConstants.js":"16","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\actions\\productActions.js":"17","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Loader.js":"18","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Message.js":"19","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\CartScreen.js":"20","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\reducers\\cartReducers.js":"21","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\constants\\cartConstants.js":"22","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\actions\\cartActions.js":"23","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\reducers\\userReducers.js":"24","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\constants\\userConstants.js":"25","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Login.js":"26","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\actions\\userAction.js":"27","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\reducers\\utilReducers.js":"28","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\common\\Redirect.js":"29","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\ProfileScreen.js":"30","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Register.js":"31","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\ShippingScreen.js":"32","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\CheckoutSteps.js":"33","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\PaymentScreen.js":"34","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"35","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\reducers\\orderReducers.js":"36","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\constants\\orderConstants.js":"37","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\actions\\orderActions.js":"38","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\OrderScreen.js":"39","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\UserListScreen.js":"40","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\UserEditScreen.js":"41","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\ProductListScreen.js":"42","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\ProductEditScreen.js":"43","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\OrderListScreen.js":"44","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Paginate.js":"45","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\ProductCarousel.js":"46","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\meta.js":"47"},{"size":604,"mtime":1608445099813,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"49"},{"size":3306,"mtime":1609346076710,"results":"51","hashOfConfig":"49"},{"size":14046,"mtime":1609323966099,"results":"52","hashOfConfig":"49"},{"size":380,"mtime":1608954559213,"results":"53","hashOfConfig":"49"},{"size":733,"mtime":1609323550775,"results":"54","hashOfConfig":"49"},{"size":1763,"mtime":1609403699159,"results":"55","hashOfConfig":"49"},{"size":2937,"mtime":1608116270267,"results":"56","hashOfConfig":"49"},{"size":1014,"mtime":1608192431271,"results":"57","hashOfConfig":"49"},{"size":987,"mtime":1608117454441,"results":"58","hashOfConfig":"49"},{"size":7844,"mtime":1609403864401,"results":"59","hashOfConfig":"49"},{"size":1551,"mtime":1608200747831,"results":"60","hashOfConfig":"49"},{"size":1768,"mtime":1608630653898,"results":"61","hashOfConfig":"49"},{"size":2624,"mtime":1609395966402,"results":"62","hashOfConfig":"49"},{"size":3302,"mtime":1609395907439,"results":"63","hashOfConfig":"49"},{"size":1552,"mtime":1609395743286,"results":"64","hashOfConfig":"49"},{"size":4739,"mtime":1609396118976,"results":"65","hashOfConfig":"49"},{"size":490,"mtime":1608618643357,"results":"66","hashOfConfig":"49"},{"size":249,"mtime":1608475131950,"results":"67","hashOfConfig":"49"},{"size":5588,"mtime":1608789829619,"results":"68","hashOfConfig":"49"},{"size":1243,"mtime":1608978911028,"results":"69","hashOfConfig":"49"},{"size":294,"mtime":1608978843152,"results":"70","hashOfConfig":"49"},{"size":1187,"mtime":1608801611669,"results":"71","hashOfConfig":"49"},{"size":3087,"mtime":1609133085246,"results":"72","hashOfConfig":"49"},{"size":1463,"mtime":1609132927697,"results":"73","hashOfConfig":"49"},{"size":1963,"mtime":1608630673493,"results":"74","hashOfConfig":"49"},{"size":6049,"mtime":1609135379523,"results":"75","hashOfConfig":"49"},{"size":260,"mtime":1608624330576,"results":"76","hashOfConfig":"49"},{"size":143,"mtime":1608624172798,"results":"77","hashOfConfig":"49"},{"size":5321,"mtime":1609339784068,"results":"78","hashOfConfig":"49"},{"size":2223,"mtime":1608630970802,"results":"79","hashOfConfig":"49"},{"size":2769,"mtime":1608796431457,"results":"80","hashOfConfig":"49"},{"size":1714,"mtime":1608796381046,"results":"81","hashOfConfig":"49"},{"size":1600,"mtime":1608801890931,"results":"82","hashOfConfig":"49"},{"size":5846,"mtime":1608952112595,"results":"83","hashOfConfig":"49"},{"size":3075,"mtime":1609229305198,"results":"84","hashOfConfig":"49"},{"size":1210,"mtime":1609229369422,"results":"85","hashOfConfig":"49"},{"size":4635,"mtime":1609229762052,"results":"86","hashOfConfig":"49"},{"size":8826,"mtime":1609325799305,"results":"87","hashOfConfig":"49"},{"size":2846,"mtime":1609065227342,"results":"88","hashOfConfig":"49"},{"size":3398,"mtime":1609136247588,"results":"89","hashOfConfig":"49"},{"size":4176,"mtime":1609346130964,"results":"90","hashOfConfig":"49"},{"size":6105,"mtime":1609252868279,"results":"91","hashOfConfig":"49"},{"size":2604,"mtime":1609228622082,"results":"92","hashOfConfig":"49"},{"size":784,"mtime":1609346061583,"results":"93","hashOfConfig":"49"},{"size":1306,"mtime":1609399219480,"results":"94","hashOfConfig":"49"},{"size":508,"mtime":1609403589581,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"t9hwfi",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\index.js",[],["202","203"],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\App.js",["204"],"import React, { Suspense, lazy } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container, Row } from \"react-bootstrap\";\nconst Header = lazy(() => import(\"./components/Header\"));\nconst Footer = lazy(() => import(\"./components/Footer\"));\nconst HomeScreen = lazy(() => import(\"./screens/HomeScreen\"));\nconst ProductScreen = lazy(() => import(\"./screens/ProductScreen\"));\nconst CartScreen = lazy(() => import(\"./screens/CartScreen\"));\nconst AuthScreen = lazy(() => import(\"./screens/AuthScreen\"));\nconst ProfileScreen = lazy(() => import(\"./screens/ProfileScreen\"));\nconst ShippingScreen = lazy(() => import(\"./screens/ShippingScreen\"));\nconst PaymentScreen = lazy(() => import(\"./screens/PaymentScreen\"));\nconst PlaceOrderScreen = lazy(() => import(\"./screens/PlaceOrderScreen\"));\nconst OrderScreen = lazy(() => import(\"./screens/OrderScreen\"));\nconst UserListScreen = lazy(() => import(\"./screens/UserListScreen\"));\nconst UserEditScreen = lazy(() => import(\"./screens/UserEditScreen\"));\nconst ProductListScreen = lazy(() => import(\"./screens/ProductListScreen\"));\nconst ProductEditScreen = lazy(() => import(\"./screens/ProductEditScreen\"));\nconst OrderListScreen = lazy(() => import(\"./screens/OrderListScreen\"));\n\nfunction App() {\n  return (\n    <div className=\"main-container\">\n      <Router>\n        <Suspense fallback={<div></div>}>\n          <Header />\n          <main>\n            <Container style={{ marginTop: \"5rem\" }}>\n              <Switch>\n                <Route path=\"/\" component={HomeScreen} exact />\n                <Route path=\"/auth\" component={AuthScreen} exact />\n                <Route path=\"/profile\" component={ProfileScreen} exact />\n                <Route path=\"/shipping\" component={ShippingScreen} exact />\n                <Route path=\"/payment\" component={PaymentScreen} />\n                <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n                <Route path=\"/product/:id\" component={ProductScreen} exact />\n                <Route path=\"/order/:id\" component={OrderScreen} />\n                <Route path=\"/cart/:id?\" component={CartScreen} />\n                <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n                <Route path='/page/:pageNumber' component={HomeScreen} exact />\n                <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} />\n                <Route path=\"/admin/userlist\" component={UserListScreen} />\n                <Route\n                  path=\"/admin/productlist\"\n                  component={ProductListScreen}\n                  exact\n                />\n                <Route\n                  path=\"/admin/productlist/:pageNumber\"\n                  component={ProductListScreen}\n                  exact\n                />\n                 <Route\n                  path=\"/admin/orderlist\"\n                  component={OrderListScreen}\n                />\n                <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n                <Route\n                  path=\"/admin/product/:id/edit\"\n                  component={ProductEditScreen}\n                />\n              </Switch>\n            </Container>\n          </main>\n          <Footer />\n        </Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Header.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\common\\Search.js",["205"],"import React, {useState} from \"react\";\r\nimport \"../css/search.css\";\r\n\r\nconst Search = ({history}) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if(keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-box\">\r\n      <input\r\n        className=\"search-txt\"\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder=\"Search products\"\r\n\r\n      />\r\n      <a className=\"search-btn\" href=\"#\" onClick={submitHandler}>\r\n        <i class=\"fas fa-search\"></i>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\products.js",[],["206","207"],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\common\\LazyImage.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\AuthScreen.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\store.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Login.js",["208"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../actions/userAction\";\r\nimport Loader from \"../components/Loader.js\";\r\nimport Message from \"../components/Message.js\";\r\nimport {Redirect} from 'react-router'\r\n\r\nconst Login = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const userRedirect = useSelector((state) => state.utilReducer);\r\n  const {redirectTo} = userRedirect\r\n  const { loading, error, userInfo } = userLogin;\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n\r\n    if (redirectTo) {\r\n       <Redirect to={redirectTo} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form action=\"#\" onSubmit={submitHandler}>\r\n      <h3>Sign in</h3>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <div className=\"social-container\">\r\n        <a href=\"#\" className=\"social\">\r\n          <i className=\"fab fa-google mr-3\"></i>\r\n          <span style={{ fontSize: \"0.9rem\" }}>Sign in with google</span>\r\n        </a>\r\n      </div>\r\n      <div className=\"mt-2\"></div>\r\n      <h5>OR</h5>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Enter email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Enter password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button type=\"submit\" className=\"mt-3\">Sign In</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\actions\\userAction.js",["209"],"import axios from \"axios\";\r\nimport * as types from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\nimport { CART_ADDRESS_RESET } from \"../constants/cartConstants\";\r\nimport { redirect } from \"../common/Redirect\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: types.USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: types.USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n    dispatch(redirect(\"/\"));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  // localStorage.removeItem(\"userInfo\");\r\n  localStorage.clear();\r\n  dispatch({ type: types.USER_LOGOUT });\r\n  dispatch({ type: types.USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: CART_ADDRESS_RESET });\r\n  dispatch(redirect(\"/auth\"));\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: types.USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: types.USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: types.USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n    dispatch(redirect(\"/\"));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: types.USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: types.USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: types.USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: types.USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: types.USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: types.USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: types.USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: types.USER_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: types.USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({\r\n      type: types.USER_UPDATE_SUCCESS,\r\n    });\r\n    dispatch({\r\n      type: types.USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\reducers\\utilReducers.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\common\\Redirect.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\ProfileScreen.js",["210"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, Table, Button } from \"react-bootstrap\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userAction\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Loader from \"../components/Loader.js\";\r\nimport Message from \"../components/Message.js\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderMyList = useSelector((state) => state.orderMyList);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderMyList;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/auth\");\r\n    } else {\r\n      dispatch(getUserDetails(\"profile\"));\r\n      dispatch(listMyOrders());\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (user !== undefined) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n    }\r\n  }, [user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      //DISPATCH UPDATE PROFILE\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row style={{ marginTop: \"8rem\" }}>\r\n      <Col md={4}>\r\n        <form\r\n          action=\"#\"\r\n          onSubmit={submitHandler}\r\n          style={{ textAlign: \"center\" }}\r\n        >\r\n          <h3>Update Profile</h3>\r\n          {message && <Message variant=\"danger\">{message}</Message>}\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {success && <Message variant=\"success\">Profile Updated!!</Message>}\r\n          {loading && <Loader />}\r\n          <div className=\"profile-input d-flex flex-column\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"mt-3 update-profile-btn\">\r\n            Update Profile\r\n          </button>\r\n        </form>\r\n      </Col>\r\n      <Col md={8}>\r\n        <h3>My Orders</h3>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>\r\n                    {order.createdAt !== undefined &&\r\n                      order.createdAt.substring(0, 10)}\r\n                  </td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <button className=\"update-profile-btn\">\r\n                        Details\r\n                      </button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Register.js",["211"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from \"../actions/userAction\";\r\nimport Loader from \"../components/Loader.js\";\r\nimport Message from \"../components/Message.js\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst Register = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const userRedirect = useSelector((state) => state.utilReducer);\r\n  const { redirectTo } = userRedirect;\r\n  const { loading, error, userInfo } = userRegister;\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(register(name, email, password));\r\n\r\n    if (redirectTo) {\r\n      <Redirect to={redirectTo} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form action=\"#\" onSubmit={submitHandler} style={{overflowY: \"auto\"}}>\r\n      <h3>Create Account</h3>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <div className=\"social-container\">\r\n        <a href=\"#\" className=\"social\">\r\n          <i className=\"fab fa-google mr-3\"></i>\r\n          <span style={{ fontSize: \"0.9rem\" }}>Sign in with google</span>\r\n        </a>\r\n      </div>\r\n      <div className=\"mt-2\"></div>\r\n      <h5>OR</h5>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Enter email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Enter password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button type=\"submit\" className=\"mt-3\">Sign Up</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\PlaceOrderScreen.js",["212","213"],"import React, { useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport LazyImage from \"../common/LazyImage\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport \"../css/shipping.css\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const addDecimals = (num) => {\r\n    return Math.round((num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  //Calculate prices\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.qty * item.price, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  //15% tax\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  //dispatch the method and create order\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h4>Shipping</h4>\r\n              <p className=\"mt-3\">\r\n                <strong className=\"order-sub-title\">\r\n                  Address <i className=\"fas fa-angle-double-right\"></i>\r\n                </strong>\r\n                {cart.shippingAddress.address},{cart.shippingAddress.city},{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h4>Payment Method</h4>\r\n              <p className=\"mt-3\">\r\n                <strong className=\"order-sub-title\">\r\n                  Method <i className=\"fas fa-angle-double-right\"></i>\r\n                </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h4>Order Items</h4>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row className=\"d-flex justify-content-center align-items-center\">\r\n                        <Col md={2}>\r\n                          <LazyImage\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            customHeight=\"5vw\"\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4} className=\"m-0 p-0\">\r\n                          {item.qty} x ${item.price}{\" \"}\r\n                          <i className=\"fas fa-angle-double-right\"></i>{\" \"}\r\n                          <span className=\"order-sub-title\">\r\n                            ${addDecimals(item.qty * item.price)}\r\n                          </span>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4} className=\"mt-3\">\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>Order Summary</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {error && <Message variant=\"danger\">{error}</Message>}\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block gradient-blue-background\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\OrderScreen.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\UserListScreen.js",["214"],"import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listUsers, deleteUser } from \"../actions/userAction\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/auth\");\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Admin</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto: ${user.email}`}></a>\r\n                  {user.email}\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"info\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"ml-3 btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\ProductListScreen.js",["215"],"import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n    if (userInfo && !userInfo.isAdmin) {\r\n      history.push(\"/auth\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts('', pageNumber));\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, createdProduct, pageNumber]);\r\n\r\n  //delete handler\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      //DELETE PRODUCTS\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h2>Products</h2>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Category</th>\r\n                <th>Brand</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"info\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"ml-3 btn-sm\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\ProductEditScreen.js",["216","217"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../components/Loader.js\";\r\nimport Message from \"../components/Message.js\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport * as types from \"../constants/productConstants\";\r\n\r\nconst ProductEditScreen = ({ match, history, color }) => {\r\n  const productId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: types.PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setCategory(product.category);\r\n        setBrand(product.brand);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, product, productId, history, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        brand,\r\n        category,\r\n        image,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        className=\"btn btn-light btn-outline-dark btn-sm my-3\"\r\n        to=\"/admin/productlist\"\r\n      >\r\n        <i style={{ color }} class=\"fas fa-angle-double-left\"></i>\r\n        <span className=\"ml-2 fa-8\">Go Back</span>\r\n      </Link>\r\n      <h2 className=\"text-center\">Edit Product</h2>\r\n      {loadingUpdate && <Loader />}\r\n      {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n      {loading && <Loader /> ? (\r\n        error && <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <form action=\"#\" onSubmit={submitHandler}>\r\n          <div\r\n            className=\"profile-input d-flex flex-column\"\r\n            style={{ margin: \"0px 25%\" }}\r\n          >\r\n            <input\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <input\r\n              name=\"price\"\r\n              type=\"number\"\r\n              placeholder=\"Enter price\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              name=\"image\"\r\n              type=\"text\"\r\n              placeholder=\"Enter image url\"\r\n              value={image}\r\n              onChange={(e) => setImage(e.target.value)}\r\n            />\r\n            <input type=\"file\" id=\"image-file\" onChange={uploadFileHandler} />\r\n            {uploading && <Loader />}\r\n\r\n            <input\r\n              name=\"brand\"\r\n              type=\"text\"\r\n              placeholder=\"Enter brand\"\r\n              value={brand}\r\n              onChange={(e) => setBrand(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              name=\"countInStock\"\r\n              type=\"number\"\r\n              placeholder=\"Enter count In stock\"\r\n              value={countInStock}\r\n              onChange={(e) => setCountInStock(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              name=\"category\"\r\n              type=\"text\"\r\n              placeholder=\"Enter category\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              name=\"description\"\r\n              type=\"text\"\r\n              placeholder=\"Enter description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n\r\n            <button type=\"submit\" className=\"mt-3 update-profile-btn\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nProductEditScreen.defaultProps = {\r\n  color: \"#198ada\",\r\n};\r\n\r\nexport default ProductEditScreen;\r\n\r\n{\r\n  /* <Form>\r\n              <Form.Group controlId=\"image\">\r\n                <Form.label>Image</Form.label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter image url\"\r\n                  value={image}\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                ></Form.Control>\r\n                <Form.File\r\n                  id=\"image-file\"\r\n                  label=\"Choose File\"\r\n                  custom\r\n                  onChange={uploadFileHandler}\r\n                ></Form.File>\r\n               \r\n              </Form.Group>\r\n            </Form> */\r\n}\r\n","C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\GOKUL P G\\Techshop\\frontend\\src\\components\\meta.js",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":3,"column":21,"nodeType":"224","messageId":"225","endLine":3,"endColumn":24},{"ruleId":"226","severity":1,"message":"227","line":26,"column":7,"nodeType":"228","endLine":26,"endColumn":66},{"ruleId":"218","replacedBy":"229"},{"ruleId":"220","replacedBy":"230"},{"ruleId":"226","severity":1,"message":"227","line":41,"column":9,"nodeType":"228","endLine":41,"endColumn":40},{"ruleId":"222","severity":1,"message":"231","line":213,"column":13,"nodeType":"224","messageId":"225","endLine":213,"endColumn":17},{"ruleId":"222","severity":1,"message":"232","line":3,"column":27,"nodeType":"224","messageId":"225","endLine":3,"endColumn":33},{"ruleId":"226","severity":1,"message":"227","line":42,"column":9,"nodeType":"228","endLine":42,"endColumn":40},{"ruleId":"222","severity":1,"message":"233","line":2,"column":39,"nodeType":"224","messageId":"225","endLine":2,"endColumn":44},{"ruleId":"234","severity":1,"message":"235","line":42,"column":6,"nodeType":"236","endLine":42,"endColumn":24,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":59,"column":19,"nodeType":"228","endLine":59,"endColumn":53},{"ruleId":"234","severity":1,"message":"240","line":53,"column":6,"nodeType":"236","endLine":53,"endColumn":78,"suggestions":"241"},{"ruleId":"222","severity":1,"message":"242","line":7,"column":10,"nodeType":"224","messageId":"225","endLine":7,"endColumn":14},{"ruleId":"243","severity":1,"message":"244","line":186,"column":1,"nodeType":"245","messageId":"246","endLine":205,"endColumn":2},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["247"],["248"],"'data' is assigned a value but never used.","'Button' is defined but never used.","'Image' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["249"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'successCreate'. Either include it or remove the dependency array.",["250"],"'Form' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [history, order._id, success]",{"range":"255","text":"256"},"Update the dependencies array to be: [dispatch, history, userInfo, successDelete, createdProduct, pageNumber, successCreate]",{"range":"257","text":"258"},[1379,1397],"[history, order._id, success]",[1627,1699],"[dispatch, history, userInfo, successDelete, createdProduct, pageNumber, successCreate]"]